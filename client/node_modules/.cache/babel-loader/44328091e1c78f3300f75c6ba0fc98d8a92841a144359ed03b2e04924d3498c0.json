{"ast":null,"code":"import { getMessaging, getToken } from \"firebase/messaging\";\n\n// Get registration token. Initially this makes a network call, once retrieved\n// subsequent calls to getToken will return from cache.\nconst Message = () => {\n  const messaging = getMessaging();\n  getToken(messaging, {\n    vapidKey: \"BH5CtbVUa5l9h6NKyO20mrpTxWsWZXW0TVeIzgtmbeph5a7q-KQp4POVlxaa6JsE3rAk_XJtS0rQdJfVjA-WMZM\"\n  }).then((currentToken => {\n    if (currentToken) {\n      // Send the token to your server and update the UI if necessary\n      // ...\n    } else {\n      // Show permission request UI\n      console.log(\"No registration token available. Request permission to generate one.\");\n      // ...\n    }\n  }).catch(err => {\n    console.log(\"An error occurred while retrieving token. \", err);\n    // ...\n  }));\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["getMessaging","getToken","Message","messaging","vapidKey","then","currentToken","console","log","catch","err","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final-project/Lost-and-found---Final-project/client/src/Firebase-messaging-sw.js"],"sourcesContent":["import { getMessaging, getToken } from \"firebase/messaging\";\r\n\r\n// Get registration token. Initially this makes a network call, once retrieved\r\n// subsequent calls to getToken will return from cache.\r\nconst Message = ()=>{\r\n  const messaging = getMessaging();\r\n  getToken(messaging, {\r\n    vapidKey:\r\n      \"BH5CtbVUa5l9h6NKyO20mrpTxWsWZXW0TVeIzgtmbeph5a7q-KQp4POVlxaa6JsE3rAk_XJtS0rQdJfVjA-WMZM\",\r\n  }).then(\r\n    ((currentToken) => {\r\n      if (currentToken) {\r\n        // Send the token to your server and update the UI if necessary\r\n        // ...\r\n      } else {\r\n        // Show permission request UI\r\n        console.log(\r\n          \"No registration token available. Request permission to generate one.\"\r\n        );\r\n        // ...\r\n      }\r\n    }).catch((err) => {\r\n      console.log(\"An error occurred while retrieving token. \", err);\r\n      // ...\r\n    })\r\n  );\r\n}\r\n\r\n\r\nexport default Message;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,QAAQ,QAAQ,oBAAoB;;AAE3D;AACA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAI;EAClB,MAAMC,SAAS,GAAGH,YAAY,EAAE;EAChCC,QAAQ,CAACE,SAAS,EAAE;IAClBC,QAAQ,EACN;EACJ,CAAC,CAAC,CAACC,IAAI,CACL,CAAEC,YAAY,IAAK;IACjB,IAAIA,YAAY,EAAE;MAChB;MACA;IAAA,CACD,MAAM;MACL;MACAC,OAAO,CAACC,GAAG,CACT,sEAAsE,CACvE;MACD;IACF;EACF,CAAC,EAAEC,KAAK,CAAEC,GAAG,IAAK;IAChBH,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEE,GAAG,CAAC;IAC9D;EACF,CAAC,CAAC,CACH;AACH,CAAC;AAAAC,EAAA,GAtBKT,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}