{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final-project\\\\Lost-and-found---Final-project\\\\client\\\\src\\\\Components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { requestForToken, onMessageListener } from \"../Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notify = notification => {\n  toast( /*#__PURE__*/_jsxDEV(ToastDisplay, {\n    notification: notification\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this));\n};\nconst ToastDisplay = _ref => {\n  let {\n    notification\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: notification === null || notification === void 0 ? void 0 : notification.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: notification === null || notification === void 0 ? void 0 : notification.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ToastDisplay;\nconst listenForNotifications = () => {\n  onMessageListener().then(payload => {\n    var _payload$notification, _payload$notification2;\n    const notification = {\n      title: payload === null || payload === void 0 ? void 0 : (_payload$notification = payload.notification) === null || _payload$notification === void 0 ? void 0 : _payload$notification.title,\n      body: payload === null || payload === void 0 ? void 0 : (_payload$notification2 = payload.notification) === null || _payload$notification2 === void 0 ? void 0 : _payload$notification2.body\n    };\n    notify(notification);\n  }).catch(err => console.log(\"failed: \", err));\n};\nconst Notification = () => {\n  _s();\n  useEffect(() => {\n    requestForToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Notification;\nexport { Notification, listenForNotifications };\n// const Notification = () => {\n//   const [notification, setNotification] = useState({ title: \"We found your pet\", body: \"Your pet has been found!\" });\n//   const notify = () => toast(<ToastDisplay />);\n//   function ToastDisplay() {\n//     return (\n//       <div>\n//         <p>\n//           <b>{notification?.title}</b>\n//         </p>\n//         <p>{notification?.body}</p>\n//       </div>\n//     );\n//   }\n\n//   useEffect(() => {\n//     if (notification?.title) {\n//       notify();\n//     }\n//   }, [notification]);\n//   requestForToken();\n\n//   onMessageListener()\n//     .then((payload) => {\n//       setNotification({\n//         title: payload?.notification?.title,\n//         body: payload?.notification?.body,\n//       });\n//     })\n//     .catch((err) => console.log(\"failed: \", err));\n\n//   return <Toaster />;\n// };\n\n// export default Notification;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToastDisplay\");\n$RefreshReg$(_c2, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","toast","Toaster","requestForToken","onMessageListener","jsxDEV","_jsxDEV","notify","notification","ToastDisplay","fileName","_jsxFileName","lineNumber","columnNumber","_ref","children","title","body","_c","listenForNotifications","then","payload","_payload$notification","_payload$notification2","catch","err","console","log","Notification","_s","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final-project/Lost-and-found---Final-project/client/src/Components/Notification.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { requestForToken, onMessageListener } from \"../Firebase\";\r\n\r\nconst notify = (notification) => {\r\n  toast(<ToastDisplay notification={notification} />);\r\n};\r\n\r\nconst ToastDisplay = ({ notification }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        <b>{notification?.title}</b>\r\n      </p>\r\n      <p>{notification?.body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst listenForNotifications = () => {\r\n  onMessageListener()\r\n    .then((payload) => {\r\n      const notification = {\r\n        title: payload?.notification?.title,\r\n        body: payload?.notification?.body,\r\n      };\r\n      notify(notification);\r\n    })\r\n    .catch((err) => console.log(\"failed: \", err));\r\n};\r\n\r\nconst Notification = () => {\r\n  useEffect(() => {\r\n    requestForToken();\r\n  }, []);\r\n\r\n  return <Toaster />;\r\n};\r\n\r\nexport { Notification, listenForNotifications };\r\n// const Notification = () => {\r\n//   const [notification, setNotification] = useState({ title: \"We found your pet\", body: \"Your pet has been found!\" });\r\n//   const notify = () => toast(<ToastDisplay />);\r\n//   function ToastDisplay() {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           <b>{notification?.title}</b>\r\n//         </p>\r\n//         <p>{notification?.body}</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     if (notification?.title) {\r\n//       notify();\r\n//     }\r\n//   }, [notification]);\r\n//   requestForToken();\r\n\r\n//   onMessageListener()\r\n//     .then((payload) => {\r\n//       setNotification({\r\n//         title: payload?.notification?.title,\r\n//         body: payload?.notification?.body,\r\n//       });\r\n//     })\r\n//     .catch((err) => console.log(\"failed: \", err));\r\n\r\n//   return <Toaster />;\r\n// };\r\n\r\n// export default Notification;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,IAAIC,OAAO,QAAQ,iBAAiB;AAChD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,MAAM,GAAIC,YAAY,IAAK;EAC/BP,KAAK,eAACK,OAAA,CAACG,YAAY;IAACD,YAAY,EAAEA;EAAa;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,CAAC;AACrD,CAAC;AAED,MAAMJ,YAAY,GAAGK,IAAA,IAAsB;EAAA,IAArB;IAAEN;EAAa,CAAC,GAAAM,IAAA;EACpC,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,eACET,OAAA;QAAAS,QAAA,EAAIP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEQ;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACJP,OAAA;MAAAS,QAAA,EAAIP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAES;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvB;AAEV,CAAC;AAACK,EAAA,GATIT,YAAY;AAWlB,MAAMU,sBAAsB,GAAGA,CAAA,KAAM;EACnCf,iBAAiB,EAAE,CAChBgB,IAAI,CAAEC,OAAO,IAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IACjB,MAAMf,YAAY,GAAG;MACnBQ,KAAK,EAAEK,OAAO,aAAPA,OAAO,wBAAAC,qBAAA,GAAPD,OAAO,CAAEb,YAAY,cAAAc,qBAAA,uBAArBA,qBAAA,CAAuBN,KAAK;MACnCC,IAAI,EAAEI,OAAO,aAAPA,OAAO,wBAAAE,sBAAA,GAAPF,OAAO,CAAEb,YAAY,cAAAe,sBAAA,uBAArBA,sBAAA,CAAuBN;IAC/B,CAAC;IACDV,MAAM,CAACC,YAAY,CAAC;EACtB,CAAC,CAAC,CACDgB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC,CAAC;AACjD,CAAC;AAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB7B,SAAS,CAAC,MAAM;IACdG,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOG,OAAA,CAACJ,OAAO;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACpB,CAAC;AAACgB,EAAA,CANID,YAAY;AAAAE,GAAA,GAAZF,YAAY;AAQlB,SAASA,YAAY,EAAET,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}