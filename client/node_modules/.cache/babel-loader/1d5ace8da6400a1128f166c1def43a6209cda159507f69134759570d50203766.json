{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import toast, { Toaster } from \"react-hot-toast\";\n// import { requestForToken, onMessageListener } from \"../Firebase\";\n\n// const Notification = () => {\n\n//   const [notification, setNotification] = useState({\n//     title: \"You pet is found!\",\n//     body: \"Your pet has been found!\",\n//   });\n//   const [initialNotificationProcessed, setInitialNotificationProcessed] =\n//     useState(true);\n\n//  const notify = () => {\n\n//   toast(<ToastDisplay />);\n//  }\n//   function ToastDisplay() {\n//     return (\n//       <div>\n//         <p>\n//           <b>{notification?.title}</b>\n//         </p>\n//         <p>{notification?.body}</p>\n//       </div>\n//     );\n//   }\n\n//   useEffect(() => {\n//     if (initialNotificationProcessed) {\n//       notify();\n//     }\n//   }, [notification, initialNotificationProcessed]);\n//   useEffect(() => {\n//     requestForToken();\n\n//     onMessageListener()\n//       .then((payload) => {\n//         setNotification({\n//           title: payload?.notification?.title,\n//           body: payload?.notification?.body,\n//         });\n//         setInitialNotificationProcessed(true);\n//       })\n//       .catch((err) => console.log(\"failed: \", err));\n//   }, []);\n//   return <Toaster />;\n// };\n\n// export default Notification;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/final-project/Lost-and-found---Final-project/client/src/Components/Notification.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import toast, { Toaster } from \"react-hot-toast\";\r\n// import { requestForToken, onMessageListener } from \"../Firebase\";\r\n\r\n// const Notification = () => {\r\n\r\n  \r\n//   const [notification, setNotification] = useState({\r\n//     title: \"You pet is found!\",\r\n//     body: \"Your pet has been found!\",\r\n//   });\r\n//   const [initialNotificationProcessed, setInitialNotificationProcessed] =\r\n//     useState(true);\r\n  \r\n//  const notify = () => {\r\n \r\n//   toast(<ToastDisplay />);\r\n//  }\r\n//   function ToastDisplay() {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           <b>{notification?.title}</b>\r\n//         </p>\r\n//         <p>{notification?.body}</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     if (initialNotificationProcessed) {\r\n//       notify();\r\n//     }\r\n//   }, [notification, initialNotificationProcessed]);\r\n//   useEffect(() => {\r\n//     requestForToken();\r\n\r\n//     onMessageListener()\r\n//       .then((payload) => {\r\n//         setNotification({\r\n//           title: payload?.notification?.title,\r\n//           body: payload?.notification?.body,\r\n//         });\r\n//         setInitialNotificationProcessed(true);\r\n//       })\r\n//       .catch((err) => console.log(\"failed: \", err));\r\n//   }, []);\r\n//   return <Toaster />;\r\n// };\r\n\r\n// export default Notification;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}