{"ast":null,"code":"// import axios from \"axios\";\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n\n// function LostPetsPage() {\n//   const [lost, setLost] = useState([]);\n//   const [modal, setModal] = useState(false);\n//   const [selectedPetId, setSelectedPetId] = useState(null);\n\n//   const token = localStorage.getItem(\"token\");\n\n//   async function getAllLostPets() {\n//     if (!token) {\n//       return;\n//     }\n\n//     const response = await axios.get(\"http://localhost:8000/auth/getLostPets\", {\n//       headers: {\n//         Authorization: `Bearer ${token}`,\n//       },\n//     });\n//     setLost(response.data);\n//   }\n\n//   useEffect(() => {\n//     getAllLostPets();\n//   }, []);\n\n//   async function SendEmail() {\n//     if (!token) {\n//       return;\n//     }\n\n//     await axios\n//       .post(\n//         \"http://localhost:8000/auth/send_email\",\n//         {},\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       )\n//       .then(() => alert(\"Email sent to the owner\"))\n//       .catch(() => alert(\"Could not send email\"));\n//   }\n\n//   const toggleModal = () => {\n//     setModal(!modal);\n//   };\n\n//   return (\n//     <div>\n//       {lost.map((pet) => (\n//         <div key={pet.id}>\n//           <p>{pet.name}</p>\n//           <p>{pet.description}</p>\n//           <img src={pet.photo} width={200} height={200} />\n//           <p>{pet.location}</p>\n//           <p>{pet.time}</p>\n\n//           <button onClick={() => openModal(pet.id)} className=\"btn-modal\">\n//             I found this pet!\n//           </button>\n//           {modal && selectedPetId && (\n//         <div className=\"modal\">\n//           <div onClick={closeModal} className=\"overlay\">\n//             <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//               <h2>Are you sure you its the same pet?</h2>\n//               <p>\n//                 Before you press the button please make sure you have the right\n//                 pet!{\" \"}\n//               </p>\n//               <button onClick={SendEmail}>Yes, send the email!</button>\n//               <button onClick={closeModal}>Cancel</button>\n//               {/* <button\n//                 onClick={() => {\n//                   toggleModal(pet.id);\n//                   SendEmail();\n//                 }}\n//               >\n//                 Yes send the e-mail!\n//               </button> */}\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//         </div>\n//       ))}\n\n//     </div>\n//   );\n// }\n// export default LostPetsPage;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/final-project/Lost-and-found---Final-project/client/src/Components/ProtectedComponents/LostPetsPage.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import React from \"react\";\r\n// import { useState, useEffect } from \"react\";\r\n\r\n// function LostPetsPage() {\r\n//   const [lost, setLost] = useState([]);\r\n//   const [modal, setModal] = useState(false);\r\n//   const [selectedPetId, setSelectedPetId] = useState(null);\r\n\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   async function getAllLostPets() {\r\n//     if (!token) {\r\n//       return;\r\n//     }\r\n\r\n//     const response = await axios.get(\"http://localhost:8000/auth/getLostPets\", {\r\n//       headers: {\r\n//         Authorization: `Bearer ${token}`,\r\n//       },\r\n//     });\r\n//     setLost(response.data);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     getAllLostPets();\r\n//   }, []);\r\n\r\n//   async function SendEmail() {\r\n//     if (!token) {\r\n//       return;\r\n//     }\r\n\r\n//     await axios\r\n//       .post(\r\n//         \"http://localhost:8000/auth/send_email\",\r\n//         {},\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       )\r\n//       .then(() => alert(\"Email sent to the owner\"))\r\n//       .catch(() => alert(\"Could not send email\"));\r\n//   }\r\n\r\n//   const toggleModal = () => {\r\n//     setModal(!modal);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {lost.map((pet) => (\r\n//         <div key={pet.id}>\r\n//           <p>{pet.name}</p>\r\n//           <p>{pet.description}</p>\r\n//           <img src={pet.photo} width={200} height={200} />\r\n//           <p>{pet.location}</p>\r\n//           <p>{pet.time}</p>\r\n\r\n//           <button onClick={() => openModal(pet.id)} className=\"btn-modal\">\r\n//             I found this pet!\r\n//           </button>\r\n//           {modal && selectedPetId && (\r\n//         <div className=\"modal\">\r\n//           <div onClick={closeModal} className=\"overlay\">\r\n//             <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//               <h2>Are you sure you its the same pet?</h2>\r\n//               <p>\r\n//                 Before you press the button please make sure you have the right\r\n//                 pet!{\" \"}\r\n//               </p>\r\n//               <button onClick={SendEmail}>Yes, send the email!</button>\r\n//               <button onClick={closeModal}>Cancel</button>\r\n//               {/* <button\r\n//                 onClick={() => {\r\n//                   toggleModal(pet.id);\r\n//                   SendEmail();\r\n//                 }}\r\n//               >\r\n//                 Yes send the e-mail!\r\n//               </button> */}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//         </div>\r\n//       ))}\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n// export default LostPetsPage;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}