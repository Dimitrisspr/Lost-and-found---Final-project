{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final-project\\\\Lost-and-found---Final-project\\\\client\\\\src\\\\Components\\\\ProtectedComponents\\\\FoundPetsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { MDBCard, MDBCardBody, MDBCardText, MDBCardImage, MDBRipple } from \"mdb-react-ui-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FoundPetsPage() {\n  _s();\n  const [founds, setFounds] = useState([]);\n  async function getAllFoundPets() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      return;\n    }\n    const response = await axios.get(\"http://localhost:8000/auth/getFoundPets\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setFounds(response.data);\n  }\n  useEffect(() => {\n    getAllFoundPets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: founds.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDBCard, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRipple, {\n          rippleColor: \"light\",\n          rippleTag: \"div\",\n          className: \"bg-image hover-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCardText, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Pets description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), pet.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Pets latitude and longitude: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), pet.location && `${pet.location.lat}, ${pet.location.lng}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Time the pet was found: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), pet.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, pet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(FoundPetsPage, \"pwMaQE82uyfBpLKkYYnbjPa/BPQ=\");\n_c = FoundPetsPage;\nexport default FoundPetsPage;\nvar _c;\n$RefreshReg$(_c, \"FoundPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","MDBCard","MDBCardBody","MDBCardText","MDBCardImage","MDBRipple","jsxDEV","_jsxDEV","Fragment","_Fragment","FoundPetsPage","_s","founds","setFounds","getAllFoundPets","token","localStorage","getItem","response","get","headers","Authorization","data","children","map","pet","rippleColor","rippleTag","className","fileName","_jsxFileName","lineNumber","columnNumber","description","location","lat","lng","time","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final-project/Lost-and-found---Final-project/client/src/Components/ProtectedComponents/FoundPetsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardText,\r\n  MDBCardImage,\r\n  MDBRipple,\r\n} from \"mdb-react-ui-kit\";\r\n\r\nfunction FoundPetsPage() {\r\n  const [founds, setFounds] = useState([]);\r\n\r\n  async function getAllFoundPets() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const response = await axios.get(\r\n      \"http://localhost:8000/auth/getFoundPets\",\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    setFounds(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllFoundPets();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {founds.map((pet) => (\r\n        <div key={pet.id}>\r\n          <MDBCard>\r\n            <MDBRipple\r\n              rippleColor=\"light\"\r\n              rippleTag=\"div\"\r\n              className=\"bg-image hover-overlay\"\r\n            >\r\n              \r\n            </MDBRipple>\r\n            <MDBCardBody>\r\n              <MDBCardText>\r\n                <i>Pets description: </i>\r\n                {pet.description}\r\n              </MDBCardText>\r\n              <MDBCardText>\r\n                <i>Pets latitude and longitude: </i>\r\n                {pet.location && `${pet.location.lat}, ${pet.location.lng}`}\r\n              </MDBCardText>\r\n              <MDBCardText>\r\n                <i>Time the pet was found: </i>\r\n                {pet.time}\r\n              </MDBCardText>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FoundPetsPage;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}